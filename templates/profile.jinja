{% extends 'base.jinja' %}

{% block title %}
Your Page Title
{% endblock %}

{% block content %}

<div class="topnav">
    
    <h1 style="text-align: center">Academic Platform for Students</h1>
    <h2 style="text-align:left"> 
    <a href="{{ url_for('forum', username=username) }}">Forum</a> 
    <a href="{{ url_for('chat', username=username) }}">Messaging</a>
    <a class="active" href="{{ url_for('friends', username=username) }}">Profile</a>
    <a href="{{ url_for('logout') }}">Logout</a>
    </h2>
    <h2 style="text-align:right; color: white; padding-right: 20px;"> Username: {{ username }}  </h2>
</div>
<!--  <div class="row"> --> 
<div id="left">
    <h2 class="picture">Profile picture</h2>
    <h2 style="text-align: center">{{ username }}</h2>
    <h2 style="text-align: center"> Account Type: {{ account_type }}</h2>
    <h2 style="text-align: center"> <button style="background-color: darkgrey"> Administration </button> </h2> 
</div>

<div id="middle">

    <h2 class="addnewfriend">To add new friend</h2>
    <input type="text" id="newFriend" placeholder="Enter friend's name">
    <button onclick="addFriend()">Add Friend</button>
    <h2>Friends list</h2>
        <ul id="list"></ul> 
    <script>
    let list = document.getElementById('list');
    let friends = {{ friends | tojson }};

    // Append the button to the list item
    for (let i = 0; i < friends.length; i++) {
        let li = document.createElement('li');
        li.classList.add('friend-item'); // Add a class for styling

        // Create a span to hold the friend's name
        let span = document.createElement('span');
        span.textContent = friends[i];
        li.appendChild(span);

        // Create the remove button
        let removeButton = document.createElement('button');
        removeButton.textContent = 'Remove';
        removeButton.onclick = function() {
            list.removeChild(li);
        };
        li.appendChild(removeButton);

        // Append the list item to the list
        list.appendChild(li);
    }
</script>

    <!-- Script for adding a new friend -->
    <script>
    function isValidURL(string) {
        if (string.length == 0) {
            return false;
        }
        if (string[0] == "/") {
            return true;
        }
        return false;
    }

    async function addFriend() {
        let addFriendURL = "{{ url_for('add_friend') }}";
        let recipient = document.getElementById('newFriend').value;
        let res = await axios.post(addFriendURL, {
            recipient: recipient,
        });

        if (!isValidURL(res.data)) {
            alert(res.data);
            return;
        }

        window.open(res.data, "_self");
    }
    </script>
 
    <!-- section for sending and receiving friend request --> 
    <h2>Friend Requests</h2>
        <ul id="friend-requests">
            <!-- Display pending friend requests here -->
            {% for request in requests %}
                <li>{{ request }} sent you a friend request 
                    <button onclick="acceptFriendRequest('{{ request }}')">Accept</button>
                    <button onclick="declineFriendRequest('{{ request }}')">Decline</button>
                </li>
            {% endfor %}
        </ul>

    <script type="text/javascript">
        // Function to handle accepting friend requests
        async function acceptFriendRequest(sender) {
            let acceptFriendURL = "{{ url_for('accept_friend_request') }}";

            let res = await axios.post(acceptFriendURL, {
                sender: sender,
            });

            // If the server sends in an error message, alert() the error message
            if (!isValidURL(res.data)) {
                alert("request");
                return;
            }

            // Reload the page after accepting the request
            location.reload();
            alert("Friend request from " + sender + " accepted successfully!");
        }

        // Function to handle declining friend requests
        async function declineFriendRequest(sender) {
            let declineFriendURL = "{{ url_for('decline_friend_request') }}";

            let res = await axios.post(declineFriendURL, {
                sender: sender,
            });

            // If the server sends in an error message, alert() the error message
            if (!isValidURL(res.data)) {
                alert(res.data);
                return;
            }

            // Reload the page after declining the request
            location.reload();
            alert("Friend request from " + sender + " declined successfully!");
        }
    </script>
</div> 


    <!-- section for the article section --> 
<div id="right"> 
    <h2> Summary of your Articles</h2> 
</div> 

{% endblock %}