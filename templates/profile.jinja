{% extends 'base.jinja' %}

{% block title %}
Your Page Title
{% endblock %}

{% block content %}
<style> 
    /* Add a black background color to the top navigation */
.topnav {
    background-color: #333;
    overflow: hidden;
    }
  .topnav h1{ 
    color: white; 
    text-align: centre; 

    }
  
  /* Style the links inside the navigation bar */
  .topnav a {
    float: left;
    color: #f2f2f2;
    text-align: center;
    padding: 14px 16px;
    text-decoration: none;
    font-size: 17px;
    }
  
  /* Change the color of links on hover */
  .topnav a:hover {
    background-color: #ddd;
    color: black;
    }
  
  /* Add a color to the active/current link */
  .topnav a.active {
    background-color: #04AA6D;
    color: white;
    }

* {
        box-sizing: border-box;
    }

    /* Create three unequal columns that floats next to each other */
    .column {
        float: left;
        padding: 10px;
    }
    
  /*buttons under the userprofile */ 
    .left{
    width: 25%;
    text-align: left;
    height: 100%

    }

    .middle {
        width: 25%;
        text-align: center; 
        height: 100%
    }

    .right{
        width: 50%;
        text-align: left; 
        height: 100%
    }
    
    /* Clear floats after the columns */
    .row:after {
        content: "";
        display: table;
        clear: both;

    }

    .picture{ 
        padding: 100px; 
        border-width:3px; 
        border-style:solid; 
        border-color: black ; 
        background-color: darkgrey;
        color: white; 
        border-radius: 100%;
    }
.addnewfriend{ 
    text-align: center;
}

</style> 

<div class="topnav">
    
    <h1 style="text-align: center">Academic Platform for Students</h1>
    <h2 style="text-align:left"> <a href="{{ url_for('logout') }}">Forum</a> </h2>
    <a href="{{ url_for('chat') }}">Messaging</a>
    <a class="active" href="{{ url_for('friends') }}">Profile</a>
    <a href="{{ url_for('logout') }}">Logout</a>
</div>
<div class="row">
<div class="column left">
    <h2 class="picture">Profile picture</h2>
    <h2 style="text-align: center">{{ username }}</h2>
</div>

<div class="column middle">
    <ul>
        {% for friend in friends %}
            <li>{{ friends.name }}</li>
        {% endfor %}
    </ul>

     <ul id="list"></ul>
     
    <script>
        let list = document.getElementById('list');
        // Append the button to the list item
        for (let i = 0; i < {{ friends }}.length; i++) {
            let li = document.createElement('li');
            li.textContent = {{ friends }}[i];  

            list.appendChild(li);
        }


    <h2 class="addnewfriend">To add new friend</h2>
    <input type="text" id="newFriend" placeholder="Enter friend's name">
    <button onclick="addFriend()">Add Friend</button>
    <h2>Friends list</h2>
</div>
</div>

<!-- Script for adding a new friend -->
<script>
    function isValidURL(string) {
        if (string.length == 0) {
            return false;
        }
        if (string[0] == "/") {
            return true;
        }
        return false;
    }

    async function addFriend() {
        let addFriendURL = "{{ url_for('add_friend') }}";
        let recipient = document.getElementById('newFriend').value;
        let res = await axios.post(addFriendURL, {
            recipient: recipient,
        });

        if (!isValidURL(res.data)) {
            alert(res.data);
            return;
        }

        window.open(res.data, "_self");
    }
</script>
 
<!-- section for sending and receiving friend request --> 
 <h1>Friend Requests</h1>
    <ul id="friend-requests">
        <!-- Display pending friend requests here -->
        {% for request in requests %}
            <li>{{ request }} sent you a friend request 
                <button onclick="acceptFriendRequest('{{ request }}')">Accept</button>
                <button onclick="declineFriendRequest('{{ request }}')">Decline</button>
            </li>
        {% endfor %}
    </ul>

    <script type="text/javascript">
        // Function to handle accepting friend requests
        async function acceptFriendRequest(sender) {
            let acceptFriendURL = "{{ url_for('accept_friend_request') }}";

            let res = await axios.post(acceptFriendURL, {
                sender: sender,
            });

            // If the server sends in an error message, alert() the error message
            if (!isValidURL(res.data)) {
                alert("request");
                return;
            }

            // Reload the page after accepting the request
            location.reload();
            alert("Friend request from " + sender + " accepted successfully!");
        }

        // Function to handle declining friend requests
        async function declineFriendRequest(sender) {
            let declineFriendURL = "{{ url_for('decline_friend_request') }}";

            let res = await axios.post(declineFriendURL, {
                sender: sender,
            });

            // If the server sends in an error message, alert() the error message
            if (!isValidURL(res.data)) {
                alert(res.data);
                return;
            }

            // Reload the page after declining the request
            location.reload();
            alert("Friend request from " + sender + " declined successfully!");
        }
    </script>

{% endblock %}